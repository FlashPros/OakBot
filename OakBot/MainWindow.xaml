<Window x:Class="OakBot.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:view="clr-namespace:OakBot.View"
        mc:Ignorable="d"
        Title="{Binding Main.Title, Mode=OneWay}" Height="400" Width="600"
        DataContext="{Binding Source={StaticResource Locator}}" MinWidth="600" MinHeight="400">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <cmd:EventToCommand Command="{Binding Main.CmdOnClose}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <view:BoolToNotBool x:Key="InverseBool"/>
    </Window.Resources>
    <Grid>
        <TabControl x:Name="tabControl">
            <TabItem Header="Config">
                <Grid Background="#FFE5E5E5" DataContext="{Binding Main}">
                    <GroupBox Header="Bot Login" Height="93" Margin="10,10,220,0" VerticalAlignment="Top" IsEnabled="{Binding IsBotConnected, Converter={StaticResource InverseBool}, UpdateSourceTrigger=PropertyChanged}">
                        <Grid>
                            <Label Content="Channel" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,10,0,0" Height="24"/>
                            <TextBox VerticalAlignment="Top" Margin="100,10,124,0" TextWrapping="NoWrap" Text="{Binding ChannelName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Height="24"/>
                            <Label Content="Bot Name" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,38,0,0"  Height="24"/>
                            <TextBox x:Name="tbBotUsername" VerticalAlignment="Bottom" Margin="100,0,124,10" TextWrapping="NoWrap" Text="{Binding BotUsername, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Height="24"/>
                            <Button Content="Authenticate" Command="{Binding CmdAuthBot}" Margin="0,10,14,10" HorizontalAlignment="Right" Width="100">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="BorderBrush" Value="Red"/>
                                        <Setter Property="BorderThickness" Value="2"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsBotOauthSet}" Value="True">
                                                <Setter Property="BorderBrush" Value="Green"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Grid>
                    </GroupBox>
                    <GroupBox Header="Caster Login" Height="66" Margin="10,108,220,0" VerticalAlignment="Top" IsEnabled="{Binding IsCasterConnected, Converter={StaticResource InverseBool}, UpdateSourceTrigger=PropertyChanged}">
                        <Grid>
                            <Label Content="Caster Name" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,10,0,0" Height="24"/>
                            <TextBox VerticalAlignment="Top" Margin="100,10,124,0" TextWrapping="NoWrap" Text="{Binding CasterUsername, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Height="24"/>
                            <Button Content="Authenticate" Command="{Binding CmdAuthCaster}" Margin="0,10,14,10" HorizontalAlignment="Right" Width="100">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="BorderBrush" Value="Red"/>
                                        <Setter Property="BorderThickness" Value="2"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsCasterOauthSet}" Value="True">
                                                <Setter Property="BorderBrush" Value="Green"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Grid>
                    </GroupBox>
                    <GroupBox Header="Connect" Height="164" Margin="0,10,10,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="205">
                        <Grid>
                            <CheckBox Content="Use Secure (SSL) Connection" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" IsEnabled="False"/>
                            <CheckBox Content="Connect Accounts on Startup" HorizontalAlignment="Left" Margin="10,30,0,0" VerticalAlignment="Top" IsEnabled="False"/>
                            <Button Margin="10,60,10,0" VerticalAlignment="Top" Height="30" Command="{Binding CmdConnectBot}">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Content" Value="Connect Bot"/>
                                        <Setter Property="BorderThickness" Value="2"/>
                                        <Setter Property="BorderBrush" Value="Red"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsBotConnected}" Value="True">
                                                <Setter Property="Content" Value="Disconnect Bot"/>
                                                <Setter Property="BorderBrush" Value="Green"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button Margin="10,102,10,0" VerticalAlignment="Top" Height="30" Command="{Binding CmdConnectCaster}">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Content" Value="Connect Caster"/>
                                        <Setter Property="BorderThickness" Value="2"/>
                                        <Setter Property="BorderBrush" Value="Red"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsBotConnected, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsCasterConnected}" Value="True">
                                                <Setter Property="Content" Value="Disconnect Caster"/>
                                                <Setter Property="BorderBrush" Value="Green"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Grid>
                    </GroupBox>
                </Grid>
            </TabItem>
            <TabItem Header="Console">
                <Grid Background="#FFE5E5E5" DataContext="{Binding Main}">
                    <DataGrid view:DataGridBehavior.Autoscroll="True" Margin="10,10,10,38" AutoGenerateColumns="False" HeadersVisibility="None" ItemsSource="{Binding ChatMessages, Mode=OneWay}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Time" Width="40" IsReadOnly="True" Binding="{Binding ShortTime}"/>
                            <DataGridTemplateColumn Header="Name" Width="120" IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding DisplayName}" Foreground="{Binding Color}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="Message" Width="*" IsReadOnly="True" Binding="{Binding Message}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <TextBox x:Name="ChatMessageSend" Margin="110,0,10,10" TextWrapping="NoWrap" Text="{Binding MessageToSend, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Height="23" VerticalAlignment="Bottom" IsEnabled="{Binding IsBotConnected, UpdateSourceTrigger=PropertyChanged}">
                        <TextBox.InputBindings>
                            <KeyBinding Key="Return" Command="{Binding CmdSendMessage}" CommandParameter="{Binding ElementName=ChatMessageSend, Path=Text, UpdateSourceTrigger=PropertyChanged}"/>
                        </TextBox.InputBindings>
                    </TextBox>
                    <ComboBox Margin="10,0,0,10" Height="23" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="95" ItemsSource="{Binding ChatAccounts}" SelectedItem="{Binding SelectedAccount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding IsBotConnected, UpdateSourceTrigger=PropertyChanged}" />
                </Grid>
            </TabItem>
            <TabItem Header="Giveaways" IsEnabled="False">
                
 
            </TabItem>
        </TabControl>

    </Grid>
</Window>
